name: Deploy main branch as website

on:
    push:
        branches: [main]
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: "16" # Set this to the version you need

            - id: get-repo-values
              name: Get repository values
              run: |
                  url=https://$(echo "${{github.repository}}" | sed "s/\//.github.io\//")
                  echo "url=$url" >> $GITHUB_OUTPUT

            - name: Update package.json homepage
              uses: jossef/action-set-json-field@v1
              with:
                  file: package.json
                  field: homepage
                  value: ${{ steps.get-repo-values.outputs.url }}

            - name: Create Redirects and Links
              id: create_redirects
              run: |
                  mkdir -p dist
                  echo "<html><head>\
                  <meta http-equiv='refresh' content='0; URL=${{github.server_url}}/${{github.repository}}' />\
                  </head><body>Redirecting to repository</body></html>" > ./dist/repo.html

                  mkdir -p docs
                  cp README.md docs/index.md
                  echo "# Quick Links" > docs/quick-links.md
                  echo "* [Repository](../repo.html)" >> docs/quick-links.md
                  echo "<html><head>\
                  <meta http-equiv='refresh' content='0; URL=docs/quick-links' />\
                  </head><body>Redirecting to quick links page</body></html>" > ./dist/quick.html

            - name: Install dependencies
              run: |
                  echo "<html><body><pre>" > ./dist/installation.html
                  npm install |& tee -a ./dist/installation.html
                  echo "</pre></body></html>" >> ./dist/installation.html
                  echo "* [Installation](../installation.html)" >> docs/quick-links.md

            - name: Run Linter
              run: |
                  npm run eslint-output
                  echo "* [Linter](../lint.html)" >> docs/quick-links.md

            - name: Build the project
              run: |
                  echo "<html><body><pre>" > ./dist/build.html
                  npm run build |& tee -a ./dist/build.html
                  echo "</pre></body></html>" >> ./dist/build.html
                  echo "* [Build](../build.html)" >> docs/quick-links.md

            - name: Run Tests
              run: |
                  echo "<html><body><pre>" > ./dist/tests.html
                  npm run test -- --coverage |& tee -a ./dist/tests.html
                  echo "</pre></body></html>" >> ./dist/tests.html
                  echo "* [Tests](../tests.html)" >> docs/quick-links.md

            - name: Verify Integrity
              if: ${{ !cancelled() }}
              run: |
                  echo "<html><body><pre>" > ./dist/integrity.html
                  find src -type f -name "*.test.ts" -exec md5sum {} + >> ./dist/integrity.html
                  find src -type f -name "*.test.tsx" -exec md5sum {} + >> ./dist/integrity.html
                  md5sum .eslintrc.js >> ./dist/integrity.html
                  md5sum jest.config.js >> ./dist/integrity.html
                  md5sum tsconfig.json >> ./dist/integrity.html
                  md5sum .github/workflows/deploy.yml >> ./dist/integrity.html
                  echo "</pre></body></html>" >> ./dist/integrity.html
                  echo "* [Integrity](../integrity.html)" >> docs/quick-links.md

            - name: Create GitInspector Report
              if: ${{ !cancelled() }}
              run: |
                  git clone https://github.com/jpwhite3/gitinspector.git
                  python ./gitinspector/gitinspector.py ./ --grading --format=html -f tsx,ts,html,css -x ./gitinspector -x ./node_modules -x ./wbcore > ./dist/git.html
                  echo "* [Git Inspector](../git.html)" >> docs/quick-links.md

            - name: Generate HTML from Markdown in Docs/
              if: ${{ !cancelled() }}
              uses: ldeluigi/markdown-docs@latest
              with:
                  src: docs
                  dst: dist/docs/

            # Upload the build artifact
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v2
              with:
                  path: "dist/"

            # Deploy the website to GitHub Pages
            - name: Deploy to GitHub Pages
              uses: actions/deploy-pages@v3
              with:
                  token: ${{ secrets.GITHUB_TOKEN }} # This is required to deploy to GitHub Pages
